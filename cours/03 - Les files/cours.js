/* Les structures de donn√©es lin√©aires : les files */

// Tableau + unshift() + pop() (avant √† la fin, arri√®re au d√©but)
// OU
// Tableau + shift() + push() (avant au d√©but, arri√®re √† la fin)

// Cr√©ation d'une file unshift() + pop() (avant √† la fin, arri√®re au d√©but)
// Imaginez un magasin sur la droite de la file
let file = [2,4,1,3];
console.log(file);

// La personne (3) √† l'avant (fin) se fait servir
console.log("On sert 3 qui sort de la file :");
console.log("Avant :", file);
file.pop();
console.log("Apr√®s :", file);

// Une nouvelle personne (7) entre dans la file
console.log("Une personne 7 entre dans la file :");
console.log("Avant :", file);
file.unshift(7);
console.log("Apr√®s :", file);

// Lecture de la valeur du d√©but de la file
console.log("Le d√©but de la file vaut :", file[file.length - 1]);

// Savoir si la file est vide ou pas
console.log("File vide ?", file.length === 0);

/************************************************/
/* Faisons-le dans l'autre sens maintenant ! üôÉ */
/************************************************/

console.log("DANS L'AUTRE SENS üôÉ");

// Cr√©ation d'une file shift() + push() (avant au d√©but, arri√®re √† la fin)
// Imaginez un magasin sur la gauche de la file
file = [2,4,1,3];
console.log(file);

// La personne (2) √† l'avant (d√©but) se fait servir
console.log("On sert 2 qui sort de la file :");
console.log("Avant :", file);
file.shift();
console.log("Apr√®s :", file);

// Une nouvelle personne (7) entre dans la file
console.log("Une personne 7 entre dans la file :");
console.log("Avant :", file);
file.push(7);
console.log("Apr√®s :", file);

// Lecture de la valeur du d√©but de la file
console.log("Le d√©but de la file vaut :", file[0]);

// üëç Pensez √† utiliser la CheatSheet en PDF du module d√©butant !