/* Technique d'optimisation : la mÃ©moÃ¯sation */

// ðŸš¨ MÃ©moÃ¯sation pas mÃ©morisation !

// Qu'est-ce que c'est ?
// C'est une technique d'optimisation de la vitesse d'exÃ©cution d'une fonction. Elle consiste Ã  mÃ©moriser le rÃ©sultat d'une fonction pour le renvoyer directement lors d'un prochain appel identique de cette fonction, ceci pour Ã©viter de recalculer Ã  nouveau ce rÃ©sultat.

// Exemple avec du pseudo-code (fichier algo.pseudo)

// Compromis : complexitÃ© spatiale (en espace) VS complexitÃ© temporelle

// ðŸš¨ Ne fonctionne qu'avec les fonctions pures !
// mÃªmes entrÃ©es => fonction pure => toujours les mÃªmes sorties
// fonction(a,b,c) => rÃ©sultat toujours identique

// Exemples :
// - Calculer le NiÃ¨me terme de la suite de Fibonacci
// - Puzzle classique CodinGame nÃ©cessitant la mÃ©moisation : 1D Spreadsheet
//      => https://www.codingame.com/ide/puzzle/1d-spreadsheet